#!/bin/bash

version='rc5.1';release="s3_$version.tar.gz";release_md5="6977e045d2d4f30287964d801d7ddee5";homedir=$(echo ~);s3dir="/opt/s3";cdir="support/configs";basepath='https://github.com/gorgone/s3_releases/archive';
logo(){ base64 -d <<<$1| gunzip;};installdir(){ echo -e "\n\n Installdir LOCATION\n ===================\n\n 1 = default  /opt/s3\n 2 = HOME dir $homedir/s3\n 3 = custom directory\n";read -n1 -p " ? = " key;case $key in "1") echo " Default Installdir $s3dir";if [ ! -d /opt/s3 ];then echo " -> create $s3dir";mkdir $s3dir;[ -d "$s3dir" ] && cd $s3dir || echo " -> EXIT ($s3dir) not exist";else echo " -> $s3dir exist";echo " -> delete $s3dir ? 1 = YES | ANYKEY = NO (exit)";read -n1 -p " ? = " yn; case $yn in 1) echo -e "\n -> delete $s3dir";rm -rf $s3dir;echo " -> create $s3dir";mkdir $s3dir;[ -d "$s3dir" ] && cd $s3dir || echo " -> EXIT ($s3dir) not exist";;*) echo " -> EXIT";exit;;esac;fi;;"2") echo " HOME Installdir $homedir/s3";if [ ! -d "$homedir/s3" ];then mkdir "$homedir/s3";[ -d "$homedir/s3" ] && cd "$homedir/s3" || echo " -> EXIT ($homedir/s3) not exist";else echo " -> $homedir/s3 exist";echo " -> delete $homedir/s3 ? 1 = YES | ANYKEY = NO (exit)";read -n1 -p " ? = " yn;case $yn in 1) echo -e "\n -> delete $homedir/s3";rm -rf "$homedir/s3";echo " -> create $homedir/s3";mkdir "$homedir/s3";[ -d "$homedir/s3" ] && cd "$homedir/s3" || echo " -> EXIT ($homedir/s3) not exist";;*) echo " -> EXIT";exit;;esac;fi;;"3") echo " Custom Installdir";echo -e " /path/and/directoryname\n";read -p " -> " cinput; s3dir=$cinput;if [ ! -d $s3dir ];then mkdir -p $s3dir;[ -d "$s3dir" ] && cd $s3dir || echo " -> EXIT ($s3dir) not exist";else echo " -> $s3dir exist";echo " -> delete $s3dir ? 1 = YES | ANYKEY = NO (exit)";read -n1 -p " -> " yn;case $yn in 1) echo -e "\n -> delete $s3dir"; rm -rf $s3dir; mkdir -p $s3dir;[ -d "$s3dir" ] && cd $s3dir || echo " -> EXIT ($s3dir) not exist";;*) echo " -> EXIT";exit;;esac;fi;;esac;};clear;i=5;wsl=0;W=$(echo -e '\033[0m');
ulogo="H4sIAGZhU1wAA22OTwvCMAzF7/0KvbyjO8w6x4Thn8vYzZviZYOywRTBrrLu2A9v0iIoLIHQ/PqSF9lk+zw3AtAAFx2D31rAU8ZCqKVUUD/Ua50QvP1BXqFwwkFEhY8UNLsmMVm17KC8ZqpI22rGx4UQku/bGuBSn+vqisqa9zQ497Sj/J6+NBg+d0aQG1ZZgjTDvXNzaAtqC4x2Mt0rgJJACTdPdnwE0BNI+8HNstnQjg9mLIjDJQEAAA==";
slogo="H4sIAKp/UlwAA5VRuQoCQQzt5xdsXmllXAVBFFu/QRwICGK1CnbCfLyZHHsowpo9Jsl7yeSYnZvdetMmgEMWzPiSkbOSPrAeF40TCJ6RCnNxPS4Bir5mIzOKhsuPVS89XsCUhGJx2SJJb8rmDqcQ4dbAmevh6RQvycPRgyd5zOADDnpy1upIArPo2VJQZKsIVTQRR1Paav3YmdB4nYKWCsndMR0rplonUltU1tVohk1xJE4ZMT/wWd1u06YfjKHE9qdwu21MIUvqeSXvJ5GjmUmpqZu8O7TfdbtaNltcXjg+nrfH/frHFOL2Orplm96G8IytHgMAAA==";
wlogo="H4sIANmBUlwAA5VRTU/DMAy95y/s8o6cyLpJSAi0KxduHBAikqXRgnZIK62dYFJ+PI7jpA0Iabgfsf3es51k9drcbW+8ASjbNRF+WZWMpB/YjLNHBhZa0QaioH5uAgR5UwxHCCLnH4kfZjyArGFK0rmktNLJpXROMhEaLZIuLlpO8GBUjhl84ScFtMNOVnIynWWhY9+lEjZXi4iNqLGUNyVbjR8pE6KXU5BRwbULU7GQ3LQTni1PVmZMQTrFypRSMWt8FS+38eYPwtLy5V/CLZdhpMHGc+750LfD54in0348j1Pn8T4c8XjoT1/QMbTRVZTeL6TF2m7q3qaurQXF8j7dJTPacimakJpbj826ucX+jIfh+DH03T+OKLfnY1178w2jTsPMOQMAAA==";wslc=$(tr ' ' '\n' < /proc/version | grep Microsoft | wc -l);[ "$wslc" -gt "0" ] && logo $wlogo && wsl=1 || logo $slogo;while [ $i -gt -1 ];do printf "\033[1;35m\t\tInstall starts in \033[1;37m$i\033[1;35m s. press ctrl + c to stop\r\033[1;37m";sleep 1; i=$(($i-1));done;
installdir;printf "\n please wait\n download s3 $version package > ";wget -O $release --progress=dot $basepath/$release 2>&1 |grep "%"|awk '{ printf "\033[K%-4s", $7; }';echo -en "\b\b\b\b\b\b\b\b\b\b\b\033[K 100% done...\n";sleep 1;echo -en "$Y verify file";if [ -f $pn ];then tmp="$(mktemp)";echo "$release_md5 $release">$tmp;answer=$(md5sum -c $tmp 2>&1);rm $tmp;fi;if [ "$answer" == "$release: OK" ];then echo -en $answer |awk '{{print " \033[1;33m" $1 " \033[1;32m" $2 "\033[0m"}}';sleep 2;else echo -en " check ---->";echo -en $answer |awk '{{print " " substr($1, 1, length($1)-1) " \033[1;31m" $2 "\033[0m"}}' |head -1;echo -en $W;sleep 2;exit;fi;tar xf $release;mv s3_releases-s3_$version/support . 2>&1;mv s3_releases-s3_$version/s3 . 2>&1;chmod 777 s3;rm -rf s3_releases-s3_$version s3_$version.tar.gz 2>&1;logo $ulogo;upxo="$(pwd)/$cdir/upx_option";read -n1 -p " -> " key;echo -e "\r     ";case "$key" in 1)echo -en "upx_c=-1">"$upxo";;5)echo -en "upx_c=-5">"$upxo";;9)echo -en "upx_c=-9">"$upxo";;b)echo -en "upx_c=--best">"$upxo";;*)echo -en "upx_c=-1">"$upxo";;esac;
#all done
echo -e "\033[1;37m perform now syscheck & checkout ?\n\n 1 = YES | 2 NO\n";read -n1 -p " ? = " key;
case "$key" in 1)echo " do syscheck & checkout";./s3 checkout;;2)echo " no syscheck & checkout";;*)echo " no syscheck & checkout";;esac;
echo -e "\033[1;37m\n  goto $s3dir\n  run -> ./s3\n  for help\n";
